From a51b13df2e6042c8fd6e15e33c8fa618e4258a68 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Wed, 30 Sep 2020 01:40:49 -0400
Subject: [PATCH 30/57] Revert "FODCircleView: cleanup FOD customization
 techniques"

This reverts commit e11b5d10919ca22529922746c2a37bd753fd0a71.
---
 .../systemui/biometrics/FODAnimation.java     |  62 +++++---
 .../systemui/biometrics/FODCircleView.java    | 135 ++++++++----------
 2 files changed, 98 insertions(+), 99 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/FODAnimation.java b/packages/SystemUI/src/com/android/systemui/biometrics/FODAnimation.java
index 9d403a3f8c0..0ad400e9613 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/FODAnimation.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/FODAnimation.java
@@ -41,25 +41,6 @@ public class FODAnimation extends ImageView {
     private WindowManager mWindowManager;
     private boolean mIsKeyguard;
 
-    private int mSelectedAnim;
-    private final int[] ANIMATION_STYLES = {
-        R.drawable.fod_miui_normal_recognizing_anim,
-        R.drawable.fod_miui_aod_recognizing_anim,
-        R.drawable.fod_miui_light_recognizing_anim,
-        R.drawable.fod_miui_pop_recognizing_anim,
-        R.drawable.fod_miui_pulse_recognizing_anim,
-        R.drawable.fod_miui_pulse_recognizing_white_anim,
-        R.drawable.fod_miui_rhythm_recognizing_anim,
-        R.drawable.fod_op_cosmos_recognizing_anim,
-        R.drawable.fod_op_mclaren_recognizing_anim,
-        R.drawable.fod_op_stripe_recognizing_anim,
-        R.drawable.fod_op_wave_recognizing_anim,
-        R.drawable.fod_pureview_dna_recognizing_anim,
-        R.drawable.fod_pureview_future_recognizing_anim,
-        R.drawable.fod_pureview_halo_ring_recognizing_anim,
-        R.drawable.fod_pureview_molecular_recognizing_anim
-    };
-
     public FODAnimation(Context context, int mPositionX, int mPositionY) {
         super(context);
 
@@ -79,14 +60,49 @@ public class FODAnimation extends ImageView {
         mAnimParams.y = mPositionY - (mAnimationSize / 2) + mAnimationOffset;
 
         setScaleType(ImageView.ScaleType.CENTER_INSIDE);
-        update();
+        setFODAnim();
+        recognizingAnim = (AnimationDrawable) getBackground();
     }
 
-    public void update() {
-        mSelectedAnim = Settings.System.getInt(mContext.getContentResolver(),
+    public int getFODAnim() {
+        return Settings.System.getInt(mContext.getContentResolver(),
                 Settings.System.FOD_ANIM, 0);
+    }
 
-        setBackgroundResource(ANIMATION_STYLES[mSelectedAnim]);
+    public void setFODAnim() {
+        int fodanim = getFODAnim();
+
+        if (fodanim == 0) {
+            this.setBackgroundResource(R.drawable.fod_miui_normal_recognizing_anim);
+        } else if (fodanim == 1) {
+            this.setBackgroundResource(R.drawable.fod_miui_aod_recognizing_anim);
+        } else if (fodanim == 2) {
+            this.setBackgroundResource(R.drawable.fod_miui_light_recognizing_anim);
+        } else if (fodanim == 3) {
+            this.setBackgroundResource(R.drawable.fod_miui_pop_recognizing_anim);
+        } else if (fodanim == 4) {
+            this.setBackgroundResource(R.drawable.fod_miui_pulse_recognizing_anim);
+        } else if (fodanim == 5) {
+            this.setBackgroundResource(R.drawable.fod_miui_pulse_recognizing_white_anim);
+        } else if (fodanim == 6) {
+            this.setBackgroundResource(R.drawable.fod_miui_rhythm_recognizing_anim);
+        } else if (fodanim == 7) {
+            this.setBackgroundResource(R.drawable.fod_op_cosmos_recognizing_anim);
+        } else if (fodanim == 8) {
+            this.setBackgroundResource(R.drawable.fod_op_mclaren_recognizing_anim);
+        } else if (fodanim == 9) {
+            this.setBackgroundResource(R.drawable.fod_op_stripe_recognizing_anim);
+        } else if (fodanim == 10) {
+            this.setBackgroundResource(R.drawable.fod_op_wave_recognizing_anim);
+        } else if (fodanim == 11) {
+            this.setBackgroundResource(R.drawable.fod_pureview_dna_recognizing_anim);
+        } else if (fodanim == 12) {
+            this.setBackgroundResource(R.drawable.fod_pureview_future_recognizing_anim);
+        } else if (fodanim == 13) {
+            this.setBackgroundResource(R.drawable.fod_pureview_halo_ring_recognizing_anim);
+        } else if (fodanim == 14) {
+            this.setBackgroundResource(R.drawable.fod_pureview_molecular_recognizing_anim);
+        }
         recognizingAnim = (AnimationDrawable) getBackground();
     }
 
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java b/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
index 2d798be1fb0..2e7e71a32a3 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
@@ -23,7 +23,6 @@ import android.content.ContentResolver;
 import android.content.Context;
 import android.content.res.Configuration;
 import android.content.res.Resources;
-import android.database.ContentObserver;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
 import android.graphics.Color;
@@ -33,7 +32,6 @@ import android.graphics.Point;
 import android.graphics.drawable.AnimationDrawable;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
-import android.net.Uri;
 import android.os.Handler;
 import android.os.UserHandle;
 import android.os.Looper;
@@ -105,32 +103,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
     private FODAnimation mFODAnimation;
     private boolean mIsRecognizingAnimEnabled;
 
-    private int mSelectedIcon;
-    private final int[] ICON_STYLES = {
-        R.drawable.fod_icon_default,
-        R.drawable.fod_icon_crdroid,
-        R.drawable.fod_icon_default_2,
-        R.drawable.fod_icon_default_3,
-        R.drawable.fod_icon_default_4,
-        R.drawable.fod_icon_default_5,
-        R.drawable.fod_icon_arc_reactor,
-        R.drawable.fod_icon_cpt_america_flat,
-        R.drawable.fod_icon_cpt_america_flat_gray,
-        R.drawable.fod_icon_dragon_black_flat,
-        R.drawable.fod_icon_future,
-        R.drawable.fod_icon_glow_circle,
-        R.drawable.fod_icon_neon_arc,
-        R.drawable.fod_icon_neon_arc_gray,
-        R.drawable.fod_icon_neon_circle_pink,
-        R.drawable.fod_icon_neon_triangle,
-        R.drawable.fod_icon_paint_splash_circle,
-        R.drawable.fod_icon_rainbow_horn,
-        R.drawable.fod_icon_shooky,
-        R.drawable.fod_icon_spiral_blue,
-        R.drawable.fod_icon_sun_metro,
-        R.drawable.fod_icon_default_1
-    };
-
     private IFingerprintInscreenCallback mFingerprintInscreenCallback =
             new IFingerprintInscreenCallback.Stub() {
         @Override
@@ -163,7 +135,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
         @Override
         public void onKeyguardVisibilityChanged(boolean showing) {
             mIsKeyguard = showing;
-            updateStyle();
             updatePosition();
             if (mFODAnimation != null) {
                 mFODAnimation.setAnimationKeyguard(mIsKeyguard);
@@ -268,8 +239,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
 
         mWindowManager.addView(this, mParams);
 
-        mCustomSettingsObserver.observe();
-        mCustomSettingsObserver.update();
         updatePosition();
         hide();
 
@@ -288,39 +257,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
         mFODAnimation = new FODAnimation(context, mPositionX, mPositionY);
     }
 
-    private CustomSettingsObserver mCustomSettingsObserver = new CustomSettingsObserver(mHandler);
-    private class CustomSettingsObserver extends ContentObserver {
-
-        CustomSettingsObserver(Handler handler) {
-            super(handler);
-        }
-
-        void observe() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.FOD_ICON),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.FOD_ANIM),
-                    false, this, UserHandle.USER_ALL);
-        }
-
-        @Override
-        public void onChange(boolean selfChange, Uri uri) {
-            if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.FOD_ICON))) {
-                updateStyle();
-            } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.FOD_ANIM))) {
-                updateStyle();
-            }
-        }
-
-        public void update() {
-            updateStyle();
-        }
-    }
-
     @Override
     protected void onDraw(Canvas canvas) {
         if (!mIsCircleShowing) {
@@ -373,7 +309,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
 
     @Override
     public void onConfigurationChanged(Configuration newConfig) {
-        updateStyle();
         updatePosition();
     }
 
@@ -450,7 +385,9 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
         mIsCircleShowing = false;
 
         setFODIcon();
-        setImageResource(ICON_STYLES[mSelectedIcon]);
+        if (mFODAnimation != null) {
+            mFODAnimation.setFODAnim();
+        }
         invalidate();
 
         dispatchRelease();
@@ -464,7 +401,63 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
                 Settings.System.FOD_ICON_WALLPAPER_COLOR, 0) != 0;
     }
 
+    private int getFODIcon() {
+        return Settings.System.getInt(mContext.getContentResolver(),
+                Settings.System.FOD_ICON, 0);
+    }
+
     private void setFODIcon() {
+        int fodicon = getFODIcon();
+
+        mIsRecognizingAnimEnabled = Settings.System.getInt(mContext.getContentResolver(),
+                Settings.System.FOD_RECOGNIZING_ANIMATION, 0) != 0;
+
+        if (fodicon == 0) {
+            this.setImageResource(R.drawable.fod_icon_default);
+        } else if (fodicon == 1) {
+            this.setImageResource(R.drawable.fod_icon_crdroid);
+        } else if (fodicon == 2) {
+            this.setImageResource(R.drawable.fod_icon_default_2);
+        } else if (fodicon == 3) {
+            this.setImageResource(R.drawable.fod_icon_default_3);
+        } else if (fodicon == 4) {
+            this.setImageResource(R.drawable.fod_icon_default_4);
+        } else if (fodicon == 5) {
+            this.setImageResource(R.drawable.fod_icon_default_5);
+        } else if (fodicon == 6) {
+            this.setImageResource(R.drawable.fod_icon_arc_reactor);
+        } else if (fodicon == 7) {
+            this.setImageResource(R.drawable.fod_icon_cpt_america_flat);
+        } else if (fodicon == 8) {
+            this.setImageResource(R.drawable.fod_icon_cpt_america_flat_gray);
+        } else if (fodicon == 9) {
+            this.setImageResource(R.drawable.fod_icon_dragon_black_flat);
+        } else if (fodicon == 10) {
+            this.setImageResource(R.drawable.fod_icon_future);
+        } else if (fodicon == 11) {
+            this.setImageResource(R.drawable.fod_icon_glow_circle);
+        } else if (fodicon == 12) {
+            this.setImageResource(R.drawable.fod_icon_neon_arc);
+        } else if (fodicon == 13) {
+            this.setImageResource(R.drawable.fod_icon_neon_arc_gray);
+        } else if (fodicon == 14) {
+            this.setImageResource(R.drawable.fod_icon_neon_circle_pink);
+        } else if (fodicon == 15) {
+            this.setImageResource(R.drawable.fod_icon_neon_triangle);
+        } else if (fodicon == 16) {
+            this.setImageResource(R.drawable.fod_icon_paint_splash_circle);
+        } else if (fodicon == 17) {
+            this.setImageResource(R.drawable.fod_icon_rainbow_horn);
+        } else if (fodicon == 18) {
+            this.setImageResource(R.drawable.fod_icon_shooky);
+        } else if (fodicon == 19) {
+            this.setImageResource(R.drawable.fod_icon_spiral_blue);
+        } else if (fodicon == 20) {
+            this.setImageResource(R.drawable.fod_icon_sun_metro);
+        } else if (fodicon == 21) {
+            this.setImageResource(R.drawable.fod_icon_default_1);
+        }
+
         if (useWallpaperColor()) {
             try {
                 WallpaperManager wallpaperManager = WallpaperManager.getInstance(mContext);
@@ -529,16 +522,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
         setAlpha(mIsDreaming ? 0.5f : 1.0f);
     }
 
-    private void updateStyle() {
-        mIsRecognizingAnimEnabled = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.FOD_RECOGNIZING_ANIMATION, 0) != 0;
-        mSelectedIcon = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.FOD_ICON, 0);
-        if (mFODAnimation != null) {
-            mFODAnimation.update();
-        }
-    }
-
     private void updatePosition() {
         Display defaultDisplay = mWindowManager.getDefaultDisplay();
 
-- 
2.17.1

