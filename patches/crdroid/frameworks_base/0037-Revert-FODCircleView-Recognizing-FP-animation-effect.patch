From 77a66eaa6967b3f797a37f7c543d4fa97088be40 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Wed, 30 Sep 2020 01:42:19 -0400
Subject: [PATCH 037/148] Revert "FODCircleView: Recognizing FP animation
 effects [1/2]"

This reverts commit 188c41a26739a438332490111336cdc42e1ef954.
---
 core/java/android/provider/Settings.java      |  6 ---
 .../fod_miui_pulse_recognizing_white_anim.xml | 18 -------
 .../systemui/biometrics/FODCircleView.java    | 49 +------------------
 3 files changed, 2 insertions(+), 71 deletions(-)
 delete mode 100644 packages/SystemUI/res/drawable/fod_miui_pulse_recognizing_white_anim.xml

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 342293d63ad..17bcfc073b8 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -5127,12 +5127,6 @@ public final class Settings {
          */
         public static final String FOD_RECOGNIZING_ANIMATION = "fod_recognizing_animation";
 
-        /**
-         * FOD recognizing animation picker
-         * @hide
-         */
-        public static final String FOD_ANIM = "fod_anim";
-
         /**
          * Whether to use the custom status bar header or not
          * @hide
diff --git a/packages/SystemUI/res/drawable/fod_miui_pulse_recognizing_white_anim.xml b/packages/SystemUI/res/drawable/fod_miui_pulse_recognizing_white_anim.xml
deleted file mode 100644
index 3b3c9a5fb8b..00000000000
--- a/packages/SystemUI/res/drawable/fod_miui_pulse_recognizing_white_anim.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2020 crDroid Android Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<animation-list xmlns:android="http://schemas.android.com/apk/res/android"
-    android:oneshot="false">
-</animation-list>
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java b/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
index 5fe2d5bf2f7..d6aadfb1842 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
@@ -384,9 +384,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
         mIsCircleShowing = false;
 
         setFODIcon();
-        if (mFODAnimation != null) {
-            mFODAnimation.setFODAnim();
-        }
         invalidate();
 
         dispatchRelease();
@@ -655,7 +652,7 @@ class FODAnimation extends ImageView {
     private WindowManager mWindowManager;
     private boolean mShowing = false;
     private boolean mIsKeyguard;
-    private AnimationDrawable recognizingAnim;
+    private final AnimationDrawable recognizingAnim;
     private final WindowManager.LayoutParams mAnimParams = new WindowManager.LayoutParams();
 
     public FODAnimation(Context context, int mPositionX, int mPositionY) {
@@ -678,53 +675,11 @@ class FODAnimation extends ImageView {
         mAnimParams.y = mAnimationPositionY;
 
         this.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
-        setFODAnim();
+        this.setBackgroundResource(R.drawable.fodunlockanim);
         recognizingAnim = (AnimationDrawable) this.getBackground();
 
     }
 
-    public int getFODAnim() {
-        return Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.FOD_ANIM, 0);
-    }
-
-    public void setFODAnim() {
-        int fodanim = getFODAnim();
-
-        if (fodanim == 0) {
-            this.setBackgroundResource(R.drawable.fod_miui_normal_recognizing_anim);
-        } else if (fodanim == 1) {
-            this.setBackgroundResource(R.drawable.fod_miui_aod_recognizing_anim);
-        } else if (fodanim == 2) {
-            this.setBackgroundResource(R.drawable.fod_miui_light_recognizing_anim);
-        } else if (fodanim == 3) {
-            this.setBackgroundResource(R.drawable.fod_miui_pop_recognizing_anim);
-        } else if (fodanim == 4) {
-            this.setBackgroundResource(R.drawable.fod_miui_pulse_recognizing_anim);
-        } else if (fodanim == 5) {
-            this.setBackgroundResource(R.drawable.fod_miui_pulse_recognizing_white_anim);
-        } else if (fodanim == 6) {
-            this.setBackgroundResource(R.drawable.fod_miui_rhythm_recognizing_anim);
-        } else if (fodanim == 7) {
-            this.setBackgroundResource(R.drawable.fod_op_cosmos_recognizing_anim);
-        } else if (fodanim == 8) {
-            this.setBackgroundResource(R.drawable.fod_op_mclaren_recognizing_anim);
-        } else if (fodanim == 9) {
-            this.setBackgroundResource(R.drawable.fod_op_stripe_recognizing_anim);
-        } else if (fodanim == 10) {
-            this.setBackgroundResource(R.drawable.fod_op_wave_recognizing_anim);
-        } else if (fodanim == 11) {
-            this.setBackgroundResource(R.drawable.fod_pureview_dna_recognizing_anim);
-        } else if (fodanim == 12) {
-            this.setBackgroundResource(R.drawable.fod_pureview_future_recognizing_anim);
-        } else if (fodanim == 13) {
-            this.setBackgroundResource(R.drawable.fod_pureview_halo_ring_recognizing_anim);
-        } else if (fodanim == 14) {
-            this.setBackgroundResource(R.drawable.fod_pureview_molecular_recognizing_anim);
-        }
-        recognizingAnim = (AnimationDrawable) this.getBackground();
-    }
-
     public void updateParams(int mDreamingOffsetY) {
         mAnimationPositionY = (int) Math.round(mDreamingOffsetY - (mContext.getResources().getDimensionPixelSize(R.dimen.fod_animation_size) / 2));
         mAnimParams.y = mAnimationPositionY;
-- 
2.17.1

