From e77ca553c50bead9dc5d0694b45d8ca0933baa9e Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Wed, 30 Sep 2020 01:43:04 -0400
Subject: [PATCH 038/148] Revert "FODCircleView: Recognizing fingerprint
 animation [1/2]"

This reverts commit 57f9d5445fe45617f1663e0eb2ff4aac9c229f26.
---
 core/java/android/provider/Settings.java      |  6 --
 packages/SystemUI/res/values/cr_dimens.xml    |  3 -
 .../systemui/biometrics/FODCircleView.java    | 88 +------------------
 3 files changed, 1 insertion(+), 96 deletions(-)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 17bcfc073b8..1b92474aa7c 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -5121,12 +5121,6 @@ public final class Settings {
          */
         public static final String FOD_PRESSED_STATE = "fod_pressed_state";
 
-        /**
-         * FOD recognizing animation
-         * @hide
-         */
-        public static final String FOD_RECOGNIZING_ANIMATION = "fod_recognizing_animation";
-
         /**
          * Whether to use the custom status bar header or not
          * @hide
diff --git a/packages/SystemUI/res/values/cr_dimens.xml b/packages/SystemUI/res/values/cr_dimens.xml
index c6a90d1db0f..f0a8f7fc93f 100644
--- a/packages/SystemUI/res/values/cr_dimens.xml
+++ b/packages/SystemUI/res/values/cr_dimens.xml
@@ -58,9 +58,6 @@
     <dimen name="config_customCutoutBottomWidth">0.0px</dimen>
     <dimen name="config_customCutoutBottomHeight">0.0px</dimen>
 
-    <!-- FOD recognizing animation -->
-    <dimen name="fod_animation_size">280dp</dimen>
-
     <!-- Custom header -->
     <dimen name="qs_header_image_offset">25dp</dimen>
     <dimen name="qs_header_image_side_margin">4dp</dimen>
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java b/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
index d6aadfb1842..452825abd1d 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/FODCircleView.java
@@ -29,7 +29,6 @@ import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.PixelFormat;
 import android.graphics.Point;
-import android.graphics.drawable.AnimationDrawable;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.Handler;
@@ -40,7 +39,6 @@ import android.os.RemoteException;
 import android.provider.Settings;
 import android.view.Display;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.Surface;
 import android.view.View;
@@ -100,9 +98,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
     private WallpaperManager mWallManager;
     private int iconcolor = 0xFF3980FF;
 
-    private FODAnimation mFODAnimation;
-    private boolean mIsRecognizingAnimEnabled;
-
     private IFingerprintInscreenCallback mFingerprintInscreenCallback =
             new IFingerprintInscreenCallback.Stub() {
         @Override
@@ -136,9 +131,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
         public void onKeyguardVisibilityChanged(boolean showing) {
             mIsKeyguard = showing;
             updatePosition();
-            if (mFODAnimation != null) {
-                mFODAnimation.setAnimationKeyguard(mIsKeyguard);
-            }
         }
 
         @Override
@@ -253,8 +245,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
         mPowerManager = context.getSystemService(PowerManager.class);
         mWakeLock = mPowerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
                 FODCircleView.class.getSimpleName());
-
-        mFODAnimation = new FODAnimation(context, mPositionX, mPositionY);
     }
 
     @Override
@@ -291,18 +281,14 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
 
         if (event.getAction() == MotionEvent.ACTION_DOWN && newIsInside) {
             showCircle();
-            if (mIsRecognizingAnimEnabled) {
-                mFODAnimation.showFODanimation();
-            }
             return true;
         } else if (event.getAction() == MotionEvent.ACTION_UP) {
             hideCircle();
-            mFODAnimation.hideFODanimation();
             return true;
         } else if (event.getAction() == MotionEvent.ACTION_MOVE) {
             return true;
         }
-        mFODAnimation.hideFODanimation();
+
         return false;
     }
 
@@ -405,9 +391,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
     private void setFODIcon() {
         int fodicon = getFODIcon();
 
-        mIsRecognizingAnimEnabled = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.FOD_RECOGNIZING_ANIMATION, 0) != 0;
-
         if (fodicon == 0) {
             this.setImageResource(R.drawable.fod_icon_default);
         } else if (fodicon == 1) {
@@ -559,7 +542,6 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
 
         if (mIsDreaming) {
             mParams.y += mDreamingOffsetY;
-            mFODAnimation.updateParams(mParams.y);
         }
 
         mWindowManager.updateViewLayout(this, mParams);
@@ -643,71 +625,3 @@ public class FODCircleView extends ImageView implements ConfigurationListener {
         }
     }
 }
-
-class FODAnimation extends ImageView {
-
-    private Context mContext;
-    private int mAnimationPositionY;
-    private LayoutInflater mInflater;
-    private WindowManager mWindowManager;
-    private boolean mShowing = false;
-    private boolean mIsKeyguard;
-    private final AnimationDrawable recognizingAnim;
-    private final WindowManager.LayoutParams mAnimParams = new WindowManager.LayoutParams();
-
-    public FODAnimation(Context context, int mPositionX, int mPositionY) {
-        super(context);
-
-        mContext = context;
-        mInflater = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-        mWindowManager = mContext.getSystemService(WindowManager.class);
-
-        mAnimParams.height = mContext.getResources().getDimensionPixelSize(R.dimen.fod_animation_size);
-        mAnimParams.width = mContext.getResources().getDimensionPixelSize(R.dimen.fod_animation_size);
-
-        mAnimationPositionY = (int) Math.round(mPositionY - (mContext.getResources().getDimensionPixelSize(R.dimen.fod_animation_size) / 2));
-
-        mAnimParams.format = PixelFormat.TRANSLUCENT;
-        mAnimParams.type = WindowManager.LayoutParams.TYPE_VOLUME_OVERLAY; // it must be behind FOD icon
-        mAnimParams.flags =  WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE
-                | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS;
-        mAnimParams.gravity = Gravity.TOP | Gravity.CENTER;
-        mAnimParams.y = mAnimationPositionY;
-
-        this.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
-        this.setBackgroundResource(R.drawable.fodunlockanim);
-        recognizingAnim = (AnimationDrawable) this.getBackground();
-
-    }
-
-    public void updateParams(int mDreamingOffsetY) {
-        mAnimationPositionY = (int) Math.round(mDreamingOffsetY - (mContext.getResources().getDimensionPixelSize(R.dimen.fod_animation_size) / 2));
-        mAnimParams.y = mAnimationPositionY;
-    }
-
-    public void setAnimationKeyguard(boolean state) {
-        mIsKeyguard = state;
-    }
-
-    public void showFODanimation() {
-        if (mAnimParams != null && !mShowing && mIsKeyguard) {
-            mShowing = true;
-            mWindowManager.addView(this, mAnimParams);
-            recognizingAnim.start();
-        }
-    }
-
-    public void hideFODanimation() {
-        if (mShowing) {
-            mShowing = false;
-            if (recognizingAnim != null) {
-                this.clearAnimation();
-                recognizingAnim.stop();
-                recognizingAnim.selectDrawable(0);
-            }
-            if (this.getWindowToken() != null) {
-                mWindowManager.removeView(this);
-            }
-        }
-    }
-}
-- 
2.17.1

