From 8a79acc96f3266eba6962523f84e5191c15bed0a Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Mon, 13 Apr 2020 20:52:49 +0300
Subject: [PATCH 31/40] Hide pill in full gestural nav mode [2/2]

  * based on
  https://github.com/crdroidandroid/android_packages_apps_crDroidSettings/commit/703938174a04599cd1337c350486a7c6760320cf

	modified:   res/layout/dialog_back_gesture_options.xml
	modified:   res/values/strings.xml
	modified:   src/com/android/settings/gestures/GestureNavigationBackSensitivityDialog.java
	modified:   src/com/android/settings/gestures/SystemNavigationGestureSettings.java
---
 res/layout/dialog_back_gesture_options.xml    | 11 +++++
 res/values/strings.xml                        |  3 ++
 ...estureNavigationBackSensitivityDialog.java | 19 ++++++++
 .../SystemNavigationGestureSettings.java      | 46 ++++++++++++++++---
 4 files changed, 73 insertions(+), 6 deletions(-)

diff --git a/res/layout/dialog_back_gesture_options.xml b/res/layout/dialog_back_gesture_options.xml
index 328931f943..d6a6e94fd4 100644
--- a/res/layout/dialog_back_gesture_options.xml
+++ b/res/layout/dialog_back_gesture_options.xml
@@ -117,4 +117,15 @@
                   android:ellipsize="marquee" />
 
     </LinearLayout>
+
+    <Switch
+        android:id="@+id/gesture_pill_switch"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="20dp"
+        android:layout_marginStart="12dp"
+        android:text="@string/gesture_pill_message"
+        android:textAppearance="?android:attr/textAppearance"
+        style="@android:style/TextAppearance.Material.Subhead" />
+
 </LinearLayout>
diff --git a/res/values/strings.xml b/res/values/strings.xml
index 2dc82be738..84056f6f72 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -11473,4 +11473,7 @@
     <string name="three_finger_gesture">Swipe to screenshot</string>
     <string name="three_finger_gesture_summary">Swipe down with three fingers to take a screenshot</string>
 
+    <!-- NavigationBar Gestural Mode Tweaks -->
+    <string name="gesture_pill_message">Hide the navigation bar pill for seamless fullscreen gestures</string>
+
 </resources>
diff --git a/src/com/android/settings/gestures/GestureNavigationBackSensitivityDialog.java b/src/com/android/settings/gestures/GestureNavigationBackSensitivityDialog.java
index 7fef247293..278b7babab 100644
--- a/src/com/android/settings/gestures/GestureNavigationBackSensitivityDialog.java
+++ b/src/com/android/settings/gestures/GestureNavigationBackSensitivityDialog.java
@@ -23,8 +23,10 @@ import android.content.Context;
 import android.content.om.IOverlayManager;
 import android.os.Bundle;
 import android.os.ServiceManager;
+import android.provider.Settings;
 import android.view.View;
 import android.widget.SeekBar;
+import android.widget.Switch;
 
 import com.android.settings.R;
 import com.android.settings.core.instrumentation.InstrumentedDialogFragment;
@@ -33,6 +35,8 @@ import com.android.settings.core.instrumentation.InstrumentedDialogFragment;
  * Dialog to set the back gesture's sensitivity in Gesture navigation mode.
  */
 public class GestureNavigationBackSensitivityDialog extends InstrumentedDialogFragment {
+    private boolean mGesturePillSwitchChecked;
+
     private static final String TAG = "GestureNavigationBackSensitivityDialog";
     private static final String KEY_BACK_SENSITIVITY = "back_sensitivity";
     private static final String KEY_BACK_HEIGHT = "back_height";
@@ -65,6 +69,16 @@ public class GestureNavigationBackSensitivityDialog extends InstrumentedDialogFr
         seekBarSensitivity.setProgress(getArguments().getInt(KEY_BACK_SENSITIVITY));
         final SeekBar seekBarHeight = view.findViewById(R.id.back_height_seekbar);
         seekBarHeight.setProgress(getArguments().getInt(KEY_BACK_HEIGHT));
+        final Switch gesturePillSwitch = view.findViewById(R.id.gesture_pill_switch);
+        mGesturePillSwitchChecked = Settings.System.getInt(getActivity().getContentResolver(),
+                Settings.System.GESTURE_PILL_TOGGLE, 0) == 1;
+        gesturePillSwitch.setChecked(mGesturePillSwitchChecked);
+        gesturePillSwitch.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                mGesturePillSwitchChecked = gesturePillSwitch.isChecked() ? true : false;
+            }
+        });
         return new AlertDialog.Builder(getContext())
                 .setTitle(R.string.back_options_dialog_title)
                 .setMessage(R.string.back_sensitivity_dialog_message)
@@ -77,6 +91,11 @@ public class GestureNavigationBackSensitivityDialog extends InstrumentedDialogFr
                     SystemNavigationGestureSettings.setBackHeight(getActivity(), height);
                     SystemNavigationGestureSettings.setBackSensitivity(getActivity(),
                             getOverlayManager(), sensitivity);
+                    Settings.System.putInt(getActivity().getContentResolver(),
+                            Settings.System.GESTURE_PILL_TOGGLE, mGesturePillSwitchChecked ? 1 : 0);
+                    SystemNavigationGestureSettings.setBackGestureOverlaysToUse(getActivity());
+                    SystemNavigationGestureSettings.setCurrentSystemNavigationMode(getActivity(),
+                            getOverlayManager(), SystemNavigationGestureSettings.getCurrentSystemNavigationMode(getActivity()));
                 })
                 .create();
     }
diff --git a/src/com/android/settings/gestures/SystemNavigationGestureSettings.java b/src/com/android/settings/gestures/SystemNavigationGestureSettings.java
index 3f720bd8c3..0c867b549c 100644
--- a/src/com/android/settings/gestures/SystemNavigationGestureSettings.java
+++ b/src/com/android/settings/gestures/SystemNavigationGestureSettings.java
@@ -79,6 +79,8 @@ public class SystemNavigationGestureSettings extends RadioButtonPickerFragment {
     public static final String PREF_KEY_SUGGESTION_COMPLETE =
             "pref_system_navigation_suggestion_complete";
 
+    public static String[] BACK_GESTURE_OVERLAYS_TO_USE;
+
     @VisibleForTesting
     static final String NAV_BAR_MODE_GESTURAL_OVERLAY_NARROW_BACK
             = "com.android.internal.systemui.navbar.gestural_narrow_back";
@@ -95,6 +97,21 @@ public class SystemNavigationGestureSettings extends RadioButtonPickerFragment {
             NAV_BAR_MODE_GESTURAL_OVERLAY_WIDE_BACK,
             NAV_BAR_MODE_GESTURAL_OVERLAY_EXTRA_WIDE_BACK
     };
+    // No pill overlays
+    static final String NAV_BAR_MODE_GESTURAL_OVERLAY_NO_PILL
+            = "com.android.internal.systemui.navbar.gestural_nopill";
+    static final String NAV_BAR_MODE_GESTURAL_OVERLAY_NARROW_BACK_NO_PILL
+            = "com.android.internal.systemui.navbar.gestural_narrow_back_nopill";
+    static final String NAV_BAR_MODE_GESTURAL_OVERLAY_WIDE_BACK_NO_PILL
+            = "com.android.internal.systemui.navbar.gestural_wide_back_nopill";
+    static final String NAV_BAR_MODE_GESTURAL_OVERLAY_EXTRA_WIDE_BACK_NO_PILL
+            = "com.android.internal.systemui.navbar.gestural_extra_wide_back_nopill";
+    static final String[] BACK_GESTURE_INSET_OVERLAYS_NO_PILL = {
+            NAV_BAR_MODE_GESTURAL_OVERLAY_NARROW_BACK_NO_PILL,
+            NAV_BAR_MODE_GESTURAL_OVERLAY_NO_PILL,
+            NAV_BAR_MODE_GESTURAL_OVERLAY_WIDE_BACK_NO_PILL,
+            NAV_BAR_MODE_GESTURAL_OVERLAY_EXTRA_WIDE_BACK_NO_PILL
+    };
     @VisibleForTesting
     static int BACK_GESTURE_INSET_DEFAULT_OVERLAY = 1;
 
@@ -144,6 +161,9 @@ public class SystemNavigationGestureSettings extends RadioButtonPickerFragment {
             bindPreferenceExtra(pref, info.getKey(), info, defaultKey, systemDefaultKey);
             screen.addPreference(pref);
         }
+
+        setBackGestureOverlaysToUse(getContext());
+
         mayCheckOnlyRadioButton();
     }
 
@@ -179,7 +199,9 @@ public class SystemNavigationGestureSettings extends RadioButtonPickerFragment {
         List<CandidateInfoExtra> candidates = new ArrayList<>();
 
         if (SystemNavigationPreferenceController.isOverlayPackageAvailable(c,
-                NAV_BAR_MODE_GESTURAL_OVERLAY)) {
+                NAV_BAR_MODE_GESTURAL_OVERLAY) ||
+            SystemNavigationPreferenceController.isOverlayPackageAvailable(c,
+                NAV_BAR_MODE_GESTURAL_OVERLAY_NO_PILL)) {
             candidates.add(new CandidateInfoExtra(
                     c.getText(R.string.edge_to_edge_navigation_title),
                     c.getText(R.string.edge_to_edge_navigation_summary),
@@ -225,7 +247,7 @@ public class SystemNavigationGestureSettings extends RadioButtonPickerFragment {
     @VisibleForTesting
     static void setBackSensitivity(Context context, IOverlayManager overlayManager,
             int sensitivity) {
-        if (sensitivity < 0 || sensitivity >= BACK_GESTURE_INSET_OVERLAYS.length) {
+        if (sensitivity < 0 || sensitivity >= BACK_GESTURE_OVERLAYS_TO_USE.length) {
             throw new IllegalArgumentException("Sensitivity out of range.");
         }
 
@@ -233,16 +255,16 @@ public class SystemNavigationGestureSettings extends RadioButtonPickerFragment {
         context.getSharedPreferences(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE).edit()
                 .putInt(PREFS_BACK_SENSITIVITY_KEY, sensitivity).apply();
         if (getCurrentSystemNavigationMode(context) == KEY_SYSTEM_NAV_GESTURAL) {
-            setNavBarInteractionMode(overlayManager, BACK_GESTURE_INSET_OVERLAYS[sensitivity]);
+            setNavBarInteractionMode(overlayManager, BACK_GESTURE_OVERLAYS_TO_USE[sensitivity]);
         }
     }
 
     @VisibleForTesting
     static int getBackSensitivity(Context context, IOverlayManager overlayManager) {
-        for (int i = 0; i < BACK_GESTURE_INSET_OVERLAYS.length; i++) {
+        for (int i = 0; i < BACK_GESTURE_OVERLAYS_TO_USE.length; i++) {
             OverlayInfo info = null;
             try {
-                info = overlayManager.getOverlayInfo(BACK_GESTURE_INSET_OVERLAYS[i], USER_CURRENT);
+                info = overlayManager.getOverlayInfo(BACK_GESTURE_OVERLAYS_TO_USE[i], USER_CURRENT);
             } catch (RemoteException e) { /* Do nothing */ }
             if (info != null && info.isEnabled()) {
                 return i;
@@ -268,6 +290,18 @@ public class SystemNavigationGestureSettings extends RadioButtonPickerFragment {
                 Settings.System.BACK_GESTURE_HEIGHT, 0);
     }
 
+    static int getPillToggleState(Context context) {
+        return Settings.System.getInt(context.getContentResolver(),
+                Settings.System.GESTURE_PILL_TOGGLE, 0);
+    }
+
+    static void setBackGestureOverlaysToUse(Context context) {
+        if (getPillToggleState(context) == 1)
+            BACK_GESTURE_OVERLAYS_TO_USE = BACK_GESTURE_INSET_OVERLAYS_NO_PILL;
+        else
+            BACK_GESTURE_OVERLAYS_TO_USE = BACK_GESTURE_INSET_OVERLAYS;
+    }
+
     @VisibleForTesting
     static String getCurrentSystemNavigationMode(Context context) {
         if (SystemNavigationPreferenceController.isEdgeToEdgeEnabled(context)) {
@@ -285,7 +319,7 @@ public class SystemNavigationGestureSettings extends RadioButtonPickerFragment {
         switch (key) {
             case KEY_SYSTEM_NAV_GESTURAL:
                 int sensitivity = getBackSensitivity(context, overlayManager);
-                setNavBarInteractionMode(overlayManager, BACK_GESTURE_INSET_OVERLAYS[sensitivity]);
+                setNavBarInteractionMode(overlayManager, BACK_GESTURE_OVERLAYS_TO_USE[sensitivity]);
                 break;
             case KEY_SYSTEM_NAV_2BUTTONS:
                 setNavBarInteractionMode(overlayManager, NAV_BAR_MODE_2BUTTON_OVERLAY);
-- 
2.17.1

