From 286dc7a198a6c8ada7d03ab0f199051799c04dc0 Mon Sep 17 00:00:00 2001
From: Daniel Micay <danielmicay@gmail.com>
Date: Wed, 23 Aug 2017 01:38:46 -0400
Subject: [PATCH 183/186] require unlocking to use battery saver quick tile

---
 .../systemui/qs/tiles/BatterySaverTile.java   | 25 +++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/BatterySaverTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/BatterySaverTile.java
index d62f10d312d..ae29043d625 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/BatterySaverTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/BatterySaverTile.java
@@ -21,12 +21,15 @@ import android.service.quicksettings.Tile;
 import android.widget.Switch;
 
 import com.android.internal.logging.nano.MetricsProto.MetricsEvent;
+import com.android.systemui.Dependency;
 import com.android.systemui.R;
 import com.android.systemui.plugins.qs.QSTile.BooleanState;
 import com.android.systemui.qs.QSHost;
 import com.android.systemui.qs.SecureSetting;
 import com.android.systemui.qs.tileimpl.QSTileImpl;
 import com.android.systemui.statusbar.policy.BatteryController;
+import com.android.systemui.plugins.ActivityStarter;
+import com.android.systemui.statusbar.policy.KeyguardMonitor;
 
 import javax.inject.Inject;
 
@@ -42,12 +45,15 @@ public class BatterySaverTile extends QSTileImpl<BooleanState> implements
     private boolean mPluggedIn;
 
     private Icon mIcon = ResourceIcon.get(com.android.internal.R.drawable.ic_qs_battery_saver);
+    private final KeyguardMonitor mKeyguard;
+    private final KeyguardCallback mKeyguardCallback = new KeyguardCallback();
 
     @Inject
     public BatterySaverTile(QSHost host, BatteryController batteryController) {
         super(host);
         mBatteryController = batteryController;
         mBatteryController.observe(getLifecycle(), this);
+        mKeyguard = Dependency.get(KeyguardMonitor.class);
         mSetting = new SecureSetting(mContext, mHandler, Secure.LOW_POWER_WARNING_ACKNOWLEDGED) {
             @Override
             protected void handleValueChanged(int value, boolean observedChange) {
@@ -75,6 +81,11 @@ public class BatterySaverTile extends QSTileImpl<BooleanState> implements
     @Override
     public void handleSetListening(boolean listening) {
         mSetting.setListening(listening);
+        if (listening) {
+            mKeyguard.addCallback(mKeyguardCallback);
+        } else {
+            mKeyguard.removeCallback(mKeyguardCallback);
+        }
     }
 
     @Override
@@ -87,6 +98,13 @@ public class BatterySaverTile extends QSTileImpl<BooleanState> implements
         if (getState().state == Tile.STATE_UNAVAILABLE) {
             return;
         }
+        if (mKeyguard.isSecure() && mKeyguard.isShowing()) {
+            Dependency.get(ActivityStarter.class).postQSRunnableDismissingKeyguard(() -> {
+                mHost.openPanels();
+                mBatteryController.setPowerSaveMode(!mPowerSave);
+            });
+            return;
+        }
         mBatteryController.setPowerSaveMode(!mPowerSave);
     }
 
@@ -120,4 +138,11 @@ public class BatterySaverTile extends QSTileImpl<BooleanState> implements
         mPowerSave = isPowerSave;
         refreshState(null);
     }
+
+    private final class KeyguardCallback implements KeyguardMonitor.Callback {
+        @Override
+        public void onKeyguardShowingChanged() {
+            refreshState();
+        }
+    }
 }
-- 
2.17.1

